{{- if eq .Values.global.target "openshift" }}
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: dbos
  name: dbos-web-console
spec:
  lookupPolicy:
    local: false
  tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "{{ .Values.dbos.imageRegistry }}/dbos-web-ui-dashboard:{{ .Values.dbos.version }}"
      importPolicy:
        insecure: true
        scheduled: true
      name: {{ .Values.dbos.version }}
      referencePolicy:
        type: Source
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: dbos
  name: dbos-web-console
spec:
  replicas: 1
  selector:
    app: dbos
    deploymentconfig: dbos-web-console
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: dbos
        deploymentconfig: dbos-web-console
    spec:
      containers:
        - env:
            - name: OPTIMSERVER_MASTER_URL
              value: http://dbos-master:8080/
            - name: OPTIMSERVER_MASTER_DOC_URL
              value: http://dbos-documentation:8080/
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.dbos.authProfile }}
          image: "{{ .Values.dbos.imageRegistry }}/dbos-web-ui-dashboard:{{ .Values.dbos.version }}"
          imagePullPolicy: Always
          name: dbos-web-console
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      {{- if .Values.dbos.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.dbos.imagePullSecrets | indent 12 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - dbos-web-console
        from:
          kind: ImageStreamTag
          name: dbos-web-console:{{ .Values.dbos.version }}
      type: ImageChange
    - type: ConfigChange
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: dbos
  name: dbos-web-console
spec:
  host: dbos-web-console-{{ .Release.Namespace }}.{{ .Values.global.host }}
  port:
    targetPort: 8080-tcp
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: dbos-web-console
    weight: 100
  wildcardPolicy: None
# should be removed when okd API bug fixed (https://github.com/openshift/origin/issues/24060)
status:
  ingress:
    - conditions:
        - lastTransitionTime: "2019-12-06T03:24:58Z"
          status: "True"
          type: Admitted
      host: ""
      routerCanonicalHostname: ""
      routerName: default
      wildcardPolicy: None
{{- end }}
{{- if eq .Values.global.target "kubernetes" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dbos
  name: dbos-web-console
spec:
  selector:
    matchLabels:
      app: dbos
      deploymentconfig: dbos-web-console
  template:
    metadata:
      labels:
        app: dbos
        deploymentconfig: dbos-web-console
    spec:
      containers:
        - env:
            - name: OPTIMSERVER_MASTER_URL
              value: http://dbos-master:8080/
            - name: OPTIMSERVER_MASTER_DOC_URL
              value: http://dbos-documentation:8080/
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.dbos.authProfile }}
          image: "{{ .Values.dbos.imageRegistry }}/dbos-web-ui-dashboard:{{ .Values.dbos.version }}"
          imagePullPolicy: Always
          name: dbos-web-console
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      {{- if .Values.dbos.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.dbos.imagePullSecrets | indent 12 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dbos-web-console-web
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`dbos-web-console-{{ .Release.Namespace }}.{{ .Values.global.host }}`) && PathPrefix(`/`)
      middlewares:
        - name: redirect
          namespace: kube-system
      services:
        - name: dbos-web-console
          port: 8080
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dbos-web-console-websecure
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`dbos-web-console-{{ .Release.Namespace }}.{{ .Values.global.host }}`) && PathPrefix(`/`)
      services:
        - name: dbos-web-console
          port: 8080
  tls: {}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dbos
  name: dbos-web-console
spec:
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: dbos
    deploymentconfig: dbos-web-console
  sessionAffinity: None
  type: ClusterIP
